@model IEnumerable<Job.Models.TMemberComment>
@Html.Editor("FRating", "RatingInt")
@Html.ValidationMessage("FRating", "", new { @class = "text-danger" })

@{
 Layout = "~/Areas/Back/Views/Shared/_LayoutBack.cshtml";
 }
<h1>業主評論</h1>
@foreach (var item in Model)
{
    <div class="card">
        <div class="card-header">@item.UserName</div>
        <div class="d-flex align-items-center gap-2">
            <strong>@item.UserName</strong>
            @Html.Partial(
            "~/Views/Shared/DisplayTemplates/RatingStars.cshtml",
                (int?)item.Rating   // ← 把實際分數丟給模板
                )
        </div>
        <div class="card-body">
            <blockquote class="blockquote mb-0">
                <p>@item.Comment</p>
                <footer class="blockquote-footer">@item.DateTime</footer>
            </blockquote>
        </div>
    </div>
    <hr />
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <input type="hidden" name="MemberId" value="@ViewBag.MemberId" />

    <div class="form-group">
        <label>評分</label>
        @Html.Editor("FRating", "RatingInt")   @* ← 名稱型（因為 View 是集合） *@
        @Html.ValidationMessage("FRating", "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label>評論</label>
        @Html.TextArea("Comment", null, new { @class = "form-control" })
        @Html.ValidationMessage("Comment", "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">送出</button>
}
